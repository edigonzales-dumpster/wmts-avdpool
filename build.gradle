plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

apply from: "$rootDir/gradle/versioning.gradle"

group = 'ch.so.agi.wmts'

ext {
    apacheCamelVersion = "3.0.0"
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
    mavenCentral()
    jcenter()    
    maven { url "http://jars.interlis.ch" } 
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.apache.camel.springboot:camel-spring-boot-starter:${apacheCamelVersion}"
    implementation "org.apache.camel:camel-support:${apacheCamelVersion}"   
    implementation "org.apache.camel:camel-ftp:${apacheCamelVersion}"
    implementation "org.apache.camel:camel-mail:${apacheCamelVersion}"	
    implementation "org.apache.camel:camel-zipfile:${apacheCamelVersion}"   
    implementation "ch.interlis:ili2pg:4.3.2"
    implementation "ch.ehi:ehibasics:1.2.0"
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task deleteFilesJarDir(type: Delete) {
    delete fileTree("${buildDir}/dependency/")//.listFiles()
    delete file("${buildDir}/dependency/")
}

task unzipJar(type: Copy) {
    from zipTree(file("${buildDir}/libs/wmts-avdpool-"+version+".jar"))
    into file("${buildDir}/dependency/")
}
unzipJar.dependsOn(deleteFilesJarDir)
bootJar.finalizedBy(unzipJar)
